{
 "cells": [
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "# Predicting Annual Salary for Data Science and STEM Roles based on LEVELS.FYI Data\n",
    "\n",
    "Author: \n",
    "- Lim Hong Chuan [Hong-Data](https://github.com/Hong-Data)\n",
    "- Nurhanie Syakirah [Jennieus](https://github.com/Jennieus)\n",
    "- Tan Shi Ling [shilingt](https://github.com/shilingt)\n",
    "- Zhu Mingli [MingliZhu](https://github.com/MingliZhu)\n",
    "- Yu Yuen Hern [yuenherny](https://github.com/yuenherny)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### Determine business objectives\n",
    "\n",
    "-------------\n",
    "<b> Background, overview and motivation: </b>\n",
    "Tech-related jobs has been booming when technology went mainstream, especially data scientist role.\n",
    "\n",
    "According to the Glassdoor 2022, data scientist rank the top 3 best job in America for 7 years running. This ranking is based on the career opportunites rating, number of opening jobs, and the average salaries. The median base salary is $120,000. The job opening were also spiking up from 1,736 in 2016 to 10,071 in 2022. \n",
    "\n",
    "However, the ecosystem does not depend on just data scientist alone, it involves upstream and downstream job roles - like product/project managers and software engineers. These jobs are equally important to ensure the democratization of technology to average users. Hence, many people flocked to tech industry.\n",
    "\n",
    "Unfortunately, the compensation structure vary from one company to another, and was not accessible equally to everyone. [Levels.fyi](https://www.levels.fyi/) was started to democratize the access of information to compensation structure across tech jobs.\n",
    "\n",
    "*We want to expand this effort by creating an AI model (and subsequently a web app) that enable users to know the estimated annual compensation based on user inputs like year, company, level, title, location, years of experience, years at company and gender.*\n",
    "\n",
    "-------------\n",
    "<b> Business objective: </b>\n",
    "To predict the annual salary (including base pay, stock grants and estimated bonuses) for data science and STEM roles using data from [LEVELS.FYI](https://www.levels.fyi/).\n",
    "\n",
    "-------------\n",
    "<b> Business success criteria: </b> \n",
    "A web app that enables user to know the annual compensation based on their input like year, company, level, title, location, years of experience, years at company and gender. and for the next 5 years\n",
    "\n",
    "-------------\n",
    "<b> Related works: </b> \n",
    "\n",
    "<b> 1. Salary Prediction in the IT Job Market with Few High-Dimensional Samples: A Spanish Case Study </b><br>\n",
    "This paper study predict the salary of IT jobs using data from Tecnoempleo, an e-Recruitment website. The result shows that experience, job stability or certain roles contribute significantly to the salary. Besides, decision trees yield a bettery accuracy (84%) than voting committe based tools.\n",
    "\n",
    "<b> 2. Gender-based salary differences in academic medicine: a retrospective review of data from six public medical centers in the Western USA </b> <br>\n",
    "The paper study the effects of gender, rank and speciality of the acedemic medical centers in the Western USA. among the 799 faculty members, it is found that male are paid significantly higher than female in general surgery and obstetrics and gynaecology. It is estimated female are paid ~$75,000 lower than their male colleague.\n",
    "\n",
    "<b> 3. Improving students' motivation to study using salary prediction system </b> <br>\n",
    "This paper proposes a salary prediction system for increasing students' motivation in studying. A decision tree technique is used to generate a prediction model with seven features.The result shows that the system can effectively boost students' motivation in studying and also show them a positive viewpoint of their future.\n",
    "\n",
    "<b> 4. Salary Equity: Similarities and Differences in Outcomes from Two Common Prediction Models </b> <br>\n",
    "Multiple regression was used to develop salary prediction equations, one from each of the two faculty samples most frequently utilized in this type of research (males only, all faculty).\n",
    "\n",
    "<b> 5. Quantitative analysis of historical data for prediction of job salary in India - A case study </b> <br>\n",
    "In this paper an attempt has been made to develop a quantitative approach for predicting the factors that affect the salary of an individual. The Aspiring Minds’ Employability Outcomes (AMEO-2015) dataset consisting of Aspiring Minds’ Computer Adaptive Test (AMCAT) score along with job seeker personal and employment details of Indian students has been considered for the study. In order to analyze the effect of more than one independent variable on dependent variable multiple linear regression models has been applied. The model has been used on the training data to predict dependent variables and to extract features with highest impact on salary prediction.\n"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### Determine data mining goal and success criteria\n",
    "\n",
    "Goals:\n",
    "- **Create a ML model that is able to predict the annual salary based on user input with MAE <= 1000, RMSE <= 1, Pearson >= 0.9, R2 >= 0.9 (Primary outcome)**\n",
    "- Create a ML model that is able to predict the annual salary for the same role in the next 5 years (Optional)\n",
    "- Deploy the ML model into a web app which outputs estimated annual salary to the user, which automatically retrains with new data (Optional)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## From Section 2: Data Understanding\n",
    "\n",
    "Let's open the HTML file in another browser tab to see the report.\n",
    "\n",
    "#### Overview section\n",
    "In the Overview tab, we see:\n",
    "- 0 missing cells\n",
    "- 0 duplicate rows\n",
    "- 1 datetime variable, 8 categorical variables and 8 numeric variables\n",
    "\n",
    "In the Alerts tab, we see:\n",
    "- company, level, location, tag, otherdetails, dmaid has high cardinality which means there are many distinct values\n",
    "- a bunch of features that has high correlation with each other (we check that more in feature selection later)\n",
    "- totalyearlycompensation, basesalary, stockgrantvalue and bonus are highly skewed\n",
    "- totalyearlycompensation, yearsofexperience, yearsofcompany, basesalary, stockgrantvalue, and bonus has a substantial percentage of zeros\n",
    "\n",
    "From here, we get a more deeper glance on how the data look like.\n",
    "\n",
    "#### Variables section\n",
    "- timestamp: Minimal entries from 2017 to 2018, but increase in trend after that\n",
    "- company: Most entries in sequence - Amazon, Microsoft, Google, Facebook, Apple\n",
    "- level: Most entries are L4, L5 then L3. \n",
    "- title: Ignored as job title is too unstructured and job grade has been reflected in `level`\n",
    "- totalyearlycompensation: As indicated in \"Alerts\", this variable is highly correlated and skewed. This require extensive checks and cleaning later especially for entries not following the XXXk convention\n",
    "- location: Most of the jobs are in (sequence) Seattle WA, San Francisco CA, New York NY, Redmond WA and Mountain View CA. Require checking on correlation with target variable\n",
    "- yearsofexperience: There are uncommon extreme values - 90 years of experience, outlier removal needed\n",
    "- tag: Most common entries are \"full stack\", \"distributed system\", \"API dev\", \"ML/AI\" and \"web dev\". Surprisingly ML/AI falls at 4th place hence we can deduce that not all jobs are all ML/AI, there are still a lot of software jobs as well\n",
    "- basesalary, stockgrantvalue, bonus: Ignored as this is part of `totalyearlycompensation`. Just require checking that the sum equals `totalyearlycompensation` \n",
    "- gender: Mostly male, then followed by blanks then female. Require check if this feature is highly correlated with pay.\n",
    "- otherdetails: Ignored as this is too unstructured\n",
    "- cityid: Not really familiar with US city ID. Require further research and checking if correlated to target variable\n",
    "- dmaid: Referring to [Nielsen's Designated Market Areas](https://www.facebook.com/business/help/1501907550136620). Require checking if DMA name aligned with `cityid` and `location`.\n",
    "- rownumber: Ignored as this is just instance ID. However, further checking required.\n",
    "\n",
    "#### Correlations section (Only for numeric variables)\n",
    "Note: Ignore basesalary, stockgrantvalue and bonus as the summation of three equals totalyearlycompensation.\n",
    "1. Spearman's: totalyearlycompensation is...\n",
    "   - Correlated with yearsofexperience\n",
    "   - Slightly correlated with yearsatcompany\n",
    "2. Pearson's: totalyearlcompensation is...\n",
    "   - Slightly correlated with yearsofexperience and yearsatcompany\n",
    "3. Kendall's: totalyearlycompensation is...\n",
    "   - Correlated with yearsofexperience\n",
    "   - Slightly correlated with yearsatcompany\n",
    "4. Phik: totalyearlycompensation is...\n",
    "   - Slightly correlated with yearsofexperience and yearsatcompany\n",
    "   - Slightly to no correlation with gender\n",
    "   - Ignore cityid as cityid is not an ordinal data\n",
    "   \n",
    "#### Missing values\n",
    "There are no missing values.\n",
    "\n",
    "\n",
    "#### What we should do next:\n",
    "1. totalyearlycompensation, basesalary, stockgrantvalue, bonus\n",
    "   - Examine extreme (0 and large) values and check the for reported salary on the Internet for that particular job grade, and then decide if needed to be removed\n",
    "   - Ensure values are consistent following XXXk format\n",
    "   - Plot histogram for entry frequency - to check if there are imbalanced data\n",
    "2. yearsofexperience\n",
    "   - Check for extreme values - >40 years experience - check whether aligns with job grade\n",
    "   - Plot totalyearlycompensation with yearsofexperience for each company\n",
    "3. yearsatcompany\n",
    "   - Check for extreme values - >40 years at company - check whether aligns with job grade\n",
    "   - Decide if remove extreme value\n",
    "   - Plot totalyearlycompensation with yearsofexperience for each company\n",
    "4. gender\n",
    "   - Plot histogram for entry frequency - to check imbalanced data\n",
    "   - Decide to replace values other than Male and Female to Unknown or other values\n",
    "5. companies\n",
    "   - Plot frequency of entries for all companies - to check imbalanced data\n",
    "   - Plot average and median totalyearlycompensation of each company - to check if there are substantial salary difference across company\n",
    "   - Plot average and median totalyearlycompensation for all job locations for each company\n",
    "   - Check company name for consistency - using data index\n",
    "6. level\n",
    "   - Study how US tech company job ranks - to change job titles into corresponding job ranks\n",
    "   - Plot average and median totalyearlycompensation for each job level across companies - to check if there are substantial salary difference for the same job grade across companies\n",
    "   - Plot the frequency of each job grade - to check imbalanced data\n",
    "7. location\n",
    "   - Plot in map the number of entries for each location - to check which location has most entries\n",
    "   - Tabulate the number of entries in a table - row: companies, column: location - to check if each companies has multiple locations\n",
    "   - Plot average and median totalyearlycompensation for each location\n",
    "   - Check for typo in location name\n",
    "8. cityid, dmaid\n",
    "    - Study how US city and DMA ID works\n",
    "    - Check if aligns with the location and real city\n",
    "9. tag\n",
    "   - Check for percentage of blanks - decide if to include in analysis or not\n",
    "   - Plot totalyearlycompensation wrt tags and job grade - to check for same job grade, is there salary difference for different job domain\n",
    "10. title\n",
    "    - Ignored\n",
    "11. otherdetails\n",
    "    - Ignored\n",
    "12. timestamp\n",
    "    - extract year into new column"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 4,
   "metadata": {},
   "outputs": [],
   "source": [
    "import pandas as pd\n",
    "import requests\n",
    "data = requests.get('https://www.levels.fyi/js/salaryData.json').json()\n",
    "df = pd.DataFrame(data)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "From the dataframe above, we have the following features:\n",
    "1. timestamp: Date and time when the details was submitted\n",
    "2. company: Hiring company\n",
    "3. level: Job grade\n",
    "4. title: Job title\n",
    "5. totalyearlycompensation: Annual salary including base salary, value of granted stock and bonus\n",
    "6. location: Location of the job\n",
    "7. yearsofexperience: Total number years of experience\n",
    "8. yearsatcompany: Total number of years in the company\n",
    "9. tag: NA\n",
    "10. basesalary: Basic salary\n",
    "11. stockgrantvalue: Value of granted stock\n",
    "12. bonus: Total bonus\n",
    "13. gender: Gender/sex of the hiree\n",
    "14. otherdetails: Other details submitted\n",
    "15. cityid: ID of the city where the job was located\n",
    "16. dmaid: DMA (Designated Market Area) regions are the geographic areas in the U.S. in which local television viewing is measured by Nielsen\n",
    "17. rowNumber: Instance ID"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 5,
   "metadata": {},
   "outputs": [],
   "source": [
    "df['timestamp'] = pd.to_datetime(df['timestamp'])\n",
    "\n",
    "for feature in ['cityid', 'dmaid', 'gender']:\n",
    "    df[feature] = df[feature].astype('category')\n",
    "\n",
    "for feature in ['totalyearlycompensation', 'yearsofexperience', 'yearsatcompany', 'basesalary', 'stockgrantvalue', 'bonus']:\n",
    "    df[feature] = pd.to_numeric(df[feature])"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## 3. Data Preparation\n",
    "\n",
    "### Data Cleaning\n",
    "\n",
    "Before the data is suitable to be explored, we need to ensure the data has been cleaned."
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "#### Removing irrelevant features\n",
    "\n",
    "To make the dataset simpler, we remove:\n",
    "- tag: Too unstructured, hard to clean. But will be useful for job scope analysis\n",
    "- otherdetails: Too unstructured, hard to clean\n",
    "- rowNumber: Same with dataframe index"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 6,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>timestamp</th>\n",
       "      <th>company</th>\n",
       "      <th>level</th>\n",
       "      <th>title</th>\n",
       "      <th>totalyearlycompensation</th>\n",
       "      <th>location</th>\n",
       "      <th>yearsofexperience</th>\n",
       "      <th>yearsatcompany</th>\n",
       "      <th>basesalary</th>\n",
       "      <th>stockgrantvalue</th>\n",
       "      <th>bonus</th>\n",
       "      <th>gender</th>\n",
       "      <th>cityid</th>\n",
       "      <th>dmaid</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>2017-06-07 11:33:27</td>\n",
       "      <td>Oracle</td>\n",
       "      <td>L3</td>\n",
       "      <td>Product Manager</td>\n",
       "      <td>186</td>\n",
       "      <td>Redwood City, CA</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>160</td>\n",
       "      <td>17</td>\n",
       "      <td>9</td>\n",
       "      <td></td>\n",
       "      <td>7392</td>\n",
       "      <td>807</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>2017-06-10 17:11:29</td>\n",
       "      <td>eBay</td>\n",
       "      <td>SE 2</td>\n",
       "      <td>Software Engineer</td>\n",
       "      <td>0</td>\n",
       "      <td>San Francisco, CA</td>\n",
       "      <td>3</td>\n",
       "      <td>4</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td></td>\n",
       "      <td>7419</td>\n",
       "      <td>807</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>2017-06-11 14:53:57</td>\n",
       "      <td>Amazon</td>\n",
       "      <td>L7</td>\n",
       "      <td>Product Manager</td>\n",
       "      <td>126</td>\n",
       "      <td>Seattle, WA</td>\n",
       "      <td>10</td>\n",
       "      <td>0</td>\n",
       "      <td>126</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td></td>\n",
       "      <td>11527</td>\n",
       "      <td>819</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>2017-06-14 21:22:25</td>\n",
       "      <td>Microsoft</td>\n",
       "      <td>64</td>\n",
       "      <td>Software Engineering Manager</td>\n",
       "      <td>171348</td>\n",
       "      <td>Redmond, WA</td>\n",
       "      <td>13</td>\n",
       "      <td>13</td>\n",
       "      <td>92799</td>\n",
       "      <td>55371</td>\n",
       "      <td>23178</td>\n",
       "      <td></td>\n",
       "      <td>11521</td>\n",
       "      <td>819</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>2017-06-16 10:44:01</td>\n",
       "      <td>Amazon</td>\n",
       "      <td>L5</td>\n",
       "      <td>Software Engineer</td>\n",
       "      <td>214175</td>\n",
       "      <td>Vancouver, BC, Canada</td>\n",
       "      <td>13</td>\n",
       "      <td>1</td>\n",
       "      <td>156335</td>\n",
       "      <td>0</td>\n",
       "      <td>57840</td>\n",
       "      <td></td>\n",
       "      <td>1320</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>62637</th>\n",
       "      <td>2021-08-17 08:16:36</td>\n",
       "      <td>Amazon</td>\n",
       "      <td>L6</td>\n",
       "      <td>Product Manager</td>\n",
       "      <td>272</td>\n",
       "      <td>Seattle, WA</td>\n",
       "      <td>7</td>\n",
       "      <td>0</td>\n",
       "      <td>176</td>\n",
       "      <td>51</td>\n",
       "      <td>45</td>\n",
       "      <td>Female</td>\n",
       "      <td>11527</td>\n",
       "      <td>819</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>62638</th>\n",
       "      <td>2021-08-17 08:22:17</td>\n",
       "      <td>Fidelity Investments</td>\n",
       "      <td>L3</td>\n",
       "      <td>Software Engineer</td>\n",
       "      <td>50</td>\n",
       "      <td>Durham, NC</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>43</td>\n",
       "      <td>0</td>\n",
       "      <td>7</td>\n",
       "      <td>Male</td>\n",
       "      <td>9606</td>\n",
       "      <td>560</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>62639</th>\n",
       "      <td>2021-08-17 08:24:56</td>\n",
       "      <td>Cisco</td>\n",
       "      <td>Grade 8</td>\n",
       "      <td>Software Engineer</td>\n",
       "      <td>200</td>\n",
       "      <td>San Jose, CA</td>\n",
       "      <td>3</td>\n",
       "      <td>6</td>\n",
       "      <td>179</td>\n",
       "      <td>7</td>\n",
       "      <td>14</td>\n",
       "      <td>Male</td>\n",
       "      <td>7422</td>\n",
       "      <td>807</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>62640</th>\n",
       "      <td>2021-08-17 08:26:21</td>\n",
       "      <td>HSBC</td>\n",
       "      <td>GCB5</td>\n",
       "      <td>Software Engineer</td>\n",
       "      <td>86</td>\n",
       "      <td>New York, NY</td>\n",
       "      <td>10</td>\n",
       "      <td>5</td>\n",
       "      <td>72</td>\n",
       "      <td>0</td>\n",
       "      <td>14</td>\n",
       "      <td></td>\n",
       "      <td>10182</td>\n",
       "      <td>501</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>62641</th>\n",
       "      <td>2021-08-17 08:28:57</td>\n",
       "      <td>Adobe</td>\n",
       "      <td>Software Engineer 5</td>\n",
       "      <td>Product Designer</td>\n",
       "      <td>382</td>\n",
       "      <td>San Francisco, CA</td>\n",
       "      <td>7</td>\n",
       "      <td>0</td>\n",
       "      <td>230</td>\n",
       "      <td>139</td>\n",
       "      <td>13</td>\n",
       "      <td>Male</td>\n",
       "      <td>7419</td>\n",
       "      <td>807</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>62642 rows × 14 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "                timestamp               company                level  \\\n",
       "0     2017-06-07 11:33:27                Oracle                   L3   \n",
       "1     2017-06-10 17:11:29                  eBay                 SE 2   \n",
       "2     2017-06-11 14:53:57                Amazon                   L7   \n",
       "3     2017-06-14 21:22:25             Microsoft                   64   \n",
       "4     2017-06-16 10:44:01                Amazon                   L5   \n",
       "...                   ...                   ...                  ...   \n",
       "62637 2021-08-17 08:16:36                Amazon                   L6   \n",
       "62638 2021-08-17 08:22:17  Fidelity Investments                   L3   \n",
       "62639 2021-08-17 08:24:56                 Cisco              Grade 8   \n",
       "62640 2021-08-17 08:26:21                  HSBC                 GCB5   \n",
       "62641 2021-08-17 08:28:57                 Adobe  Software Engineer 5   \n",
       "\n",
       "                              title  totalyearlycompensation  \\\n",
       "0                   Product Manager                      186   \n",
       "1                 Software Engineer                        0   \n",
       "2                   Product Manager                      126   \n",
       "3      Software Engineering Manager                   171348   \n",
       "4                 Software Engineer                   214175   \n",
       "...                             ...                      ...   \n",
       "62637               Product Manager                      272   \n",
       "62638             Software Engineer                       50   \n",
       "62639             Software Engineer                      200   \n",
       "62640             Software Engineer                       86   \n",
       "62641              Product Designer                      382   \n",
       "\n",
       "                    location  yearsofexperience  yearsatcompany  basesalary  \\\n",
       "0           Redwood City, CA                  1               1         160   \n",
       "1          San Francisco, CA                  3               4           0   \n",
       "2                Seattle, WA                 10               0         126   \n",
       "3                Redmond, WA                 13              13       92799   \n",
       "4      Vancouver, BC, Canada                 13               1      156335   \n",
       "...                      ...                ...             ...         ...   \n",
       "62637            Seattle, WA                  7               0         176   \n",
       "62638             Durham, NC                  0               0          43   \n",
       "62639           San Jose, CA                  3               6         179   \n",
       "62640           New York, NY                 10               5          72   \n",
       "62641      San Francisco, CA                  7               0         230   \n",
       "\n",
       "       stockgrantvalue  bonus  gender cityid dmaid  \n",
       "0                   17      9           7392   807  \n",
       "1                    0      0           7419   807  \n",
       "2                    0      0          11527   819  \n",
       "3                55371  23178          11521   819  \n",
       "4                    0  57840           1320     0  \n",
       "...                ...    ...     ...    ...   ...  \n",
       "62637               51     45  Female  11527   819  \n",
       "62638                0      7    Male   9606   560  \n",
       "62639                7     14    Male   7422   807  \n",
       "62640                0     14          10182   501  \n",
       "62641              139     13    Male   7419   807  \n",
       "\n",
       "[62642 rows x 14 columns]"
      ]
     },
     "execution_count": 6,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df = df.drop(columns=['tag', 'otherdetails', 'rowNumber'])\n",
    "df"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {
    "tags": []
   },
   "source": [
    "#### Extract year from timestamp\n",
    "\n",
    "We need the year of data submission, hence we extract the year from timestamp first."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 7,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>company</th>\n",
       "      <th>level</th>\n",
       "      <th>title</th>\n",
       "      <th>totalyearlycompensation</th>\n",
       "      <th>location</th>\n",
       "      <th>yearsofexperience</th>\n",
       "      <th>yearsatcompany</th>\n",
       "      <th>basesalary</th>\n",
       "      <th>stockgrantvalue</th>\n",
       "      <th>bonus</th>\n",
       "      <th>gender</th>\n",
       "      <th>cityid</th>\n",
       "      <th>dmaid</th>\n",
       "      <th>year</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>Oracle</td>\n",
       "      <td>L3</td>\n",
       "      <td>Product Manager</td>\n",
       "      <td>186</td>\n",
       "      <td>Redwood City, CA</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>160</td>\n",
       "      <td>17</td>\n",
       "      <td>9</td>\n",
       "      <td></td>\n",
       "      <td>7392</td>\n",
       "      <td>807</td>\n",
       "      <td>2017</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>eBay</td>\n",
       "      <td>SE 2</td>\n",
       "      <td>Software Engineer</td>\n",
       "      <td>0</td>\n",
       "      <td>San Francisco, CA</td>\n",
       "      <td>3</td>\n",
       "      <td>4</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td></td>\n",
       "      <td>7419</td>\n",
       "      <td>807</td>\n",
       "      <td>2017</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>Amazon</td>\n",
       "      <td>L7</td>\n",
       "      <td>Product Manager</td>\n",
       "      <td>126</td>\n",
       "      <td>Seattle, WA</td>\n",
       "      <td>10</td>\n",
       "      <td>0</td>\n",
       "      <td>126</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td></td>\n",
       "      <td>11527</td>\n",
       "      <td>819</td>\n",
       "      <td>2017</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>Microsoft</td>\n",
       "      <td>64</td>\n",
       "      <td>Software Engineering Manager</td>\n",
       "      <td>171348</td>\n",
       "      <td>Redmond, WA</td>\n",
       "      <td>13</td>\n",
       "      <td>13</td>\n",
       "      <td>92799</td>\n",
       "      <td>55371</td>\n",
       "      <td>23178</td>\n",
       "      <td></td>\n",
       "      <td>11521</td>\n",
       "      <td>819</td>\n",
       "      <td>2017</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>Amazon</td>\n",
       "      <td>L5</td>\n",
       "      <td>Software Engineer</td>\n",
       "      <td>214175</td>\n",
       "      <td>Vancouver, BC, Canada</td>\n",
       "      <td>13</td>\n",
       "      <td>1</td>\n",
       "      <td>156335</td>\n",
       "      <td>0</td>\n",
       "      <td>57840</td>\n",
       "      <td></td>\n",
       "      <td>1320</td>\n",
       "      <td>0</td>\n",
       "      <td>2017</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "     company level                         title  totalyearlycompensation  \\\n",
       "0     Oracle    L3               Product Manager                      186   \n",
       "1       eBay  SE 2             Software Engineer                        0   \n",
       "2     Amazon    L7               Product Manager                      126   \n",
       "3  Microsoft    64  Software Engineering Manager                   171348   \n",
       "4     Amazon    L5             Software Engineer                   214175   \n",
       "\n",
       "                location  yearsofexperience  yearsatcompany  basesalary  \\\n",
       "0       Redwood City, CA                  1               1         160   \n",
       "1      San Francisco, CA                  3               4           0   \n",
       "2            Seattle, WA                 10               0         126   \n",
       "3            Redmond, WA                 13              13       92799   \n",
       "4  Vancouver, BC, Canada                 13               1      156335   \n",
       "\n",
       "   stockgrantvalue  bonus gender cityid dmaid  year  \n",
       "0               17      9          7392   807  2017  \n",
       "1                0      0          7419   807  2017  \n",
       "2                0      0         11527   819  2017  \n",
       "3            55371  23178         11521   819  2017  \n",
       "4                0  57840          1320     0  2017  "
      ]
     },
     "execution_count": 7,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df['year'] = df['timestamp'].dt.year\n",
    "df = df.drop(columns=['timestamp'])\n",
    "df.head()"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {
    "tags": []
   },
   "source": [
    "#### Cleaning up gender column"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "There are 4 distinct values in `gender` column: Male, (Blank), Female, Other and Title: Senior Software Engineer. Let's change (Blank) and Title: Senior Software Engineer to Unknown"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 8,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "Male       35702\n",
       "Unknown    19541\n",
       "Female      6999\n",
       "Other        400\n",
       "Name: gender, dtype: int64"
      ]
     },
     "execution_count": 8,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df['gender'] = df['gender'].apply(lambda x: 'Unknown' if (x == '') or (x == 'Title: Senior Software Engineer') else x)\n",
    "df['gender'].value_counts()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 9,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "Male       35702\n",
       "Unknown    19541\n",
       "Female      6999\n",
       "Other        400\n",
       "Name: gender, dtype: int64"
      ]
     },
     "execution_count": 9,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df['gender'].value_counts()"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "#### Extract city and country from location\n",
    "\n",
    "Extracting country and city from strings are complicated and not as straightforward as using delimiters, especially when US-based locations do not include country in their location.\n",
    "\n",
    "Let's use string manipulation instead."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 10,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>company</th>\n",
       "      <th>level</th>\n",
       "      <th>title</th>\n",
       "      <th>totalyearlycompensation</th>\n",
       "      <th>location</th>\n",
       "      <th>yearsofexperience</th>\n",
       "      <th>yearsatcompany</th>\n",
       "      <th>basesalary</th>\n",
       "      <th>stockgrantvalue</th>\n",
       "      <th>bonus</th>\n",
       "      <th>gender</th>\n",
       "      <th>cityid</th>\n",
       "      <th>dmaid</th>\n",
       "      <th>year</th>\n",
       "      <th>country</th>\n",
       "      <th>state</th>\n",
       "      <th>city</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>Oracle</td>\n",
       "      <td>L3</td>\n",
       "      <td>Product Manager</td>\n",
       "      <td>186</td>\n",
       "      <td>Redwood City, CA</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>160</td>\n",
       "      <td>17</td>\n",
       "      <td>9</td>\n",
       "      <td>Unknown</td>\n",
       "      <td>7392</td>\n",
       "      <td>807</td>\n",
       "      <td>2017</td>\n",
       "      <td>US</td>\n",
       "      <td>CA</td>\n",
       "      <td>Redwood City</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>eBay</td>\n",
       "      <td>SE 2</td>\n",
       "      <td>Software Engineer</td>\n",
       "      <td>0</td>\n",
       "      <td>San Francisco, CA</td>\n",
       "      <td>3</td>\n",
       "      <td>4</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>Unknown</td>\n",
       "      <td>7419</td>\n",
       "      <td>807</td>\n",
       "      <td>2017</td>\n",
       "      <td>US</td>\n",
       "      <td>CA</td>\n",
       "      <td>San Francisco</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>Amazon</td>\n",
       "      <td>L7</td>\n",
       "      <td>Product Manager</td>\n",
       "      <td>126</td>\n",
       "      <td>Seattle, WA</td>\n",
       "      <td>10</td>\n",
       "      <td>0</td>\n",
       "      <td>126</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>Unknown</td>\n",
       "      <td>11527</td>\n",
       "      <td>819</td>\n",
       "      <td>2017</td>\n",
       "      <td>US</td>\n",
       "      <td>WA</td>\n",
       "      <td>Seattle</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>Microsoft</td>\n",
       "      <td>64</td>\n",
       "      <td>Software Engineering Manager</td>\n",
       "      <td>171348</td>\n",
       "      <td>Redmond, WA</td>\n",
       "      <td>13</td>\n",
       "      <td>13</td>\n",
       "      <td>92799</td>\n",
       "      <td>55371</td>\n",
       "      <td>23178</td>\n",
       "      <td>Unknown</td>\n",
       "      <td>11521</td>\n",
       "      <td>819</td>\n",
       "      <td>2017</td>\n",
       "      <td>US</td>\n",
       "      <td>WA</td>\n",
       "      <td>Redmond</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>Amazon</td>\n",
       "      <td>L5</td>\n",
       "      <td>Software Engineer</td>\n",
       "      <td>214175</td>\n",
       "      <td>Vancouver, BC, Canada</td>\n",
       "      <td>13</td>\n",
       "      <td>1</td>\n",
       "      <td>156335</td>\n",
       "      <td>0</td>\n",
       "      <td>57840</td>\n",
       "      <td>Unknown</td>\n",
       "      <td>1320</td>\n",
       "      <td>0</td>\n",
       "      <td>2017</td>\n",
       "      <td>Canada</td>\n",
       "      <td>BC</td>\n",
       "      <td>Vancouver</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>62637</th>\n",
       "      <td>Amazon</td>\n",
       "      <td>L6</td>\n",
       "      <td>Product Manager</td>\n",
       "      <td>272</td>\n",
       "      <td>Seattle, WA</td>\n",
       "      <td>7</td>\n",
       "      <td>0</td>\n",
       "      <td>176</td>\n",
       "      <td>51</td>\n",
       "      <td>45</td>\n",
       "      <td>Female</td>\n",
       "      <td>11527</td>\n",
       "      <td>819</td>\n",
       "      <td>2021</td>\n",
       "      <td>US</td>\n",
       "      <td>WA</td>\n",
       "      <td>Seattle</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>62638</th>\n",
       "      <td>Fidelity Investments</td>\n",
       "      <td>L3</td>\n",
       "      <td>Software Engineer</td>\n",
       "      <td>50</td>\n",
       "      <td>Durham, NC</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>43</td>\n",
       "      <td>0</td>\n",
       "      <td>7</td>\n",
       "      <td>Male</td>\n",
       "      <td>9606</td>\n",
       "      <td>560</td>\n",
       "      <td>2021</td>\n",
       "      <td>US</td>\n",
       "      <td>NC</td>\n",
       "      <td>Durham</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>62639</th>\n",
       "      <td>Cisco</td>\n",
       "      <td>Grade 8</td>\n",
       "      <td>Software Engineer</td>\n",
       "      <td>200</td>\n",
       "      <td>San Jose, CA</td>\n",
       "      <td>3</td>\n",
       "      <td>6</td>\n",
       "      <td>179</td>\n",
       "      <td>7</td>\n",
       "      <td>14</td>\n",
       "      <td>Male</td>\n",
       "      <td>7422</td>\n",
       "      <td>807</td>\n",
       "      <td>2021</td>\n",
       "      <td>US</td>\n",
       "      <td>CA</td>\n",
       "      <td>San Jose</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>62640</th>\n",
       "      <td>HSBC</td>\n",
       "      <td>GCB5</td>\n",
       "      <td>Software Engineer</td>\n",
       "      <td>86</td>\n",
       "      <td>New York, NY</td>\n",
       "      <td>10</td>\n",
       "      <td>5</td>\n",
       "      <td>72</td>\n",
       "      <td>0</td>\n",
       "      <td>14</td>\n",
       "      <td>Unknown</td>\n",
       "      <td>10182</td>\n",
       "      <td>501</td>\n",
       "      <td>2021</td>\n",
       "      <td>US</td>\n",
       "      <td>NY</td>\n",
       "      <td>New York</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>62641</th>\n",
       "      <td>Adobe</td>\n",
       "      <td>Software Engineer 5</td>\n",
       "      <td>Product Designer</td>\n",
       "      <td>382</td>\n",
       "      <td>San Francisco, CA</td>\n",
       "      <td>7</td>\n",
       "      <td>0</td>\n",
       "      <td>230</td>\n",
       "      <td>139</td>\n",
       "      <td>13</td>\n",
       "      <td>Male</td>\n",
       "      <td>7419</td>\n",
       "      <td>807</td>\n",
       "      <td>2021</td>\n",
       "      <td>US</td>\n",
       "      <td>CA</td>\n",
       "      <td>San Francisco</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>62642 rows × 17 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "                    company                level  \\\n",
       "0                    Oracle                   L3   \n",
       "1                      eBay                 SE 2   \n",
       "2                    Amazon                   L7   \n",
       "3                 Microsoft                   64   \n",
       "4                    Amazon                   L5   \n",
       "...                     ...                  ...   \n",
       "62637                Amazon                   L6   \n",
       "62638  Fidelity Investments                   L3   \n",
       "62639                 Cisco              Grade 8   \n",
       "62640                  HSBC                 GCB5   \n",
       "62641                 Adobe  Software Engineer 5   \n",
       "\n",
       "                              title  totalyearlycompensation  \\\n",
       "0                   Product Manager                      186   \n",
       "1                 Software Engineer                        0   \n",
       "2                   Product Manager                      126   \n",
       "3      Software Engineering Manager                   171348   \n",
       "4                 Software Engineer                   214175   \n",
       "...                             ...                      ...   \n",
       "62637               Product Manager                      272   \n",
       "62638             Software Engineer                       50   \n",
       "62639             Software Engineer                      200   \n",
       "62640             Software Engineer                       86   \n",
       "62641              Product Designer                      382   \n",
       "\n",
       "                    location  yearsofexperience  yearsatcompany  basesalary  \\\n",
       "0           Redwood City, CA                  1               1         160   \n",
       "1          San Francisco, CA                  3               4           0   \n",
       "2                Seattle, WA                 10               0         126   \n",
       "3                Redmond, WA                 13              13       92799   \n",
       "4      Vancouver, BC, Canada                 13               1      156335   \n",
       "...                      ...                ...             ...         ...   \n",
       "62637            Seattle, WA                  7               0         176   \n",
       "62638             Durham, NC                  0               0          43   \n",
       "62639           San Jose, CA                  3               6         179   \n",
       "62640           New York, NY                 10               5          72   \n",
       "62641      San Francisco, CA                  7               0         230   \n",
       "\n",
       "       stockgrantvalue  bonus   gender cityid dmaid  year country state  \\\n",
       "0                   17      9  Unknown   7392   807  2017      US    CA   \n",
       "1                    0      0  Unknown   7419   807  2017      US    CA   \n",
       "2                    0      0  Unknown  11527   819  2017      US    WA   \n",
       "3                55371  23178  Unknown  11521   819  2017      US    WA   \n",
       "4                    0  57840  Unknown   1320     0  2017  Canada    BC   \n",
       "...                ...    ...      ...    ...   ...   ...     ...   ...   \n",
       "62637               51     45   Female  11527   819  2021      US    WA   \n",
       "62638                0      7     Male   9606   560  2021      US    NC   \n",
       "62639                7     14     Male   7422   807  2021      US    CA   \n",
       "62640                0     14  Unknown  10182   501  2021      US    NY   \n",
       "62641              139     13     Male   7419   807  2021      US    CA   \n",
       "\n",
       "                city  \n",
       "0       Redwood City  \n",
       "1      San Francisco  \n",
       "2            Seattle  \n",
       "3            Redmond  \n",
       "4          Vancouver  \n",
       "...              ...  \n",
       "62637        Seattle  \n",
       "62638         Durham  \n",
       "62639       San Jose  \n",
       "62640       New York  \n",
       "62641  San Francisco  \n",
       "\n",
       "[62642 rows x 17 columns]"
      ]
     },
     "execution_count": 10,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df['country'] = df['location'].apply(lambda x: x.split(', ')[2] if len(x.split(', ')) >2 else \"US\")\n",
    "df['state'] = df['location'].apply(lambda x: x.split(', ')[1])\n",
    "df['city'] = df['location'].apply(lambda x: x.split(', ')[0])\n",
    "df"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "#### Leaving level column as it is, for now"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "L4                          5008\n",
       "L5                          4861\n",
       "L3                          3331\n",
       "L6                          2866\n",
       "Senior Software Engineer    1433\n",
       "                            ... \n",
       "Senior Consultant 2            1\n",
       "Fullstack Engineer             1\n",
       "New grad                       1\n",
       "Jr Software Engineer           1\n",
       "DS II                          1\n",
       "Name: level, Length: 3074, dtype: int64"
      ]
     },
     "execution_count": 24,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df['level'].value_counts()"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "#### Making company column consistent"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 2,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "'\\nHongchuan to fill in here\\n'"
      ]
     },
     "execution_count": 2,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "'''\n",
    "Hongchuan to fill in here\n",
    "'''"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {
    "tags": []
   },
   "source": [
    "#### For totalyearlycompensation, basesalary, stockgrantvalue, bonus\n",
    "   - Examine extreme (0 and large) values and check the for reported salary on the Internet for that particular job grade, and then decide if needed to be removed\n",
    "   - Ensure values are consistent following XXXk format\n",
    "   - Plot histogram for entry frequency - to check if there are imbalanced data"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 1,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "'\\nShiling to fill in here\\n'"
      ]
     },
     "execution_count": 1,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "'''\n",
    "Shiling to fill in here\n",
    "'''"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {
    "jp-MarkdownHeadingCollapsed": true,
    "tags": []
   },
   "source": [
    "### Explore data\n",
    "\n",
    "Data exploration must be aligned with the project objective - to predict the annual salary (including base pay, stock grants and estimated bonuses) for data science and STEM roles using data from [LEVELS.FYI](https://www.levels.fyi/).\n",
    "\n",
    "Hence we prioritise the following questions:\n",
    "1. What are the features that will affect annual compensation offered?\n",
    "2. How does those features change wrt annual compensation offered?\n",
    "3. What are the irrelevant (and uncorrelated) features that we can drop?\n",
    "\n",
    "From here, we can extend to these questions:\n",
    "1. Many people thinks that tech companies pays well above average and cost of living. Is this true?\n",
    "2. For the same position and job level, does 2021 compensation higher than in 2017? If yes, is it aligned with inflation?\n",
    "3. Are women underpaid in these companies? If yes, by how much?\n",
    "4. Does different company offer differently for the same position or there is no disparity?\n",
    "5. Does years in company affect total compensation? If yes, which part of compensation was affected - base salary, stock value or bonus?\n",
    "6. For the same position or job level, does location affect total compensation regardless of gender?\n",
    "\n",
    "Good to know:\n",
    "1. What are the factors impacting the salary of a data scientist?\n",
    "2. What is the salary trend for data scientist? and its comparison to living cost?\n",
    "3. What is the predicted salary for data scientist in next 5 years?"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {
    "jp-MarkdownHeadingCollapsed": true,
    "tags": []
   },
   "source": [
    "## References\n",
    "\n",
    "Best Jobs in America 2022 Employees' Choice (2022). Glassdoor. Retrived on May 3, 2022 from\n",
    "https://www.glassdoor.com/List/Best-Jobs-in-America-LST_KQ0,20.htm\n",
    "\n",
    "Data Scientist Salary-The Ultimate Guide for 2021 (2022). ProjectPro. Retrived on May 3, 2022 from https://www.projectpro.io/article/data-scientist-salary-the-ultimate-guide-for-2021/218\n",
    "\n",
    "Davenport, T H. & Patil, DJ. (2012). Data Scientist: The Sexiest Job of the 21st Century. *HARVARD BUSINESS REVIEW*. Retrieved on 3 May, 2022 from https://hbr.org/2012/10/data-scientist-the-sexiest-job-of-the-21st-century\n",
    "\n",
    "Martin, I., Mariello, A., Battiti, R. & Hernandez, J A. (2018). Salary Prediction in the IT Job Market with Few High-Dimensional Samples: A Spanish Case Study. *International Journal of Computational Intelligence Systems, 11, 1192-1209*. https://libkey.io/libraries/2611/articles/225996272/full-text-file\n",
    "    \n",
    "    \n",
    "Miller, H., Seckel, Ea., White, CL., et al. (2021). Gender-based salary differences in academic medicine: a retrospective review of data from six public medical centers in the Western USA. http://dx.doi.org/10.1136/bmjopen-2021-059216\n",
    "    \n",
    "Seaman, A. (2021). LinkedIn Jobs on the Rise: 15 opportunities that are in demand and hiring now. Retrieved on May 3, 2022 from https://www.linkedin.com/pulse/linkedin-jobs-rise-15-opportunities-demand-hiring-now-andrew-seaman/ \n"
   ]
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3 (ipykernel)",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.9.12"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 4
}
